{"name":"Rebay","body":"rebay\r\n========\r\nRebay is a very simple wrapper for the ebay finding and shopping APIs.  Please see the ebay documentation for the proper input arguments and expected output. \r\n\r\n[Ebay Shopping Api Documentation](http://developer.ebay.com/products/shopping/)\r\n\r\n[Ebay Finding Api Documentation](http://developer.ebay.com/products/finding/)\r\n\r\nConfiguration\r\n-------------\r\nCreate and require a config.rb, or if using rails create an initializer (rebay.rb perhaps), and place the following code into it:\r\n\r\n\tRebay::Api.configure do |rebay|\r\n\t\trebay.app_id = 'YOUR APPLICATION ID HERE'\r\n\tend\r\n\t\t\r\n\t\t\r\nUse\r\n---\r\nIf you have questions about optional/required parameters, please check the ebay api docs.  The source of this api wrapper also includes links to specific api call documentation.  Basically, pass whatever options into the rebay api call and they will be passed through into the actual api call.  When getting your return response, the json from ebay is transformed just a bit.  You can still expect the same keys to come through in the hash, they just aren't annoyingly wrapped in an array... everywhere.\r\n\r\n\r\nExample\r\n-------\r\nTo get search keyword recommendations for *acordian*:\r\n\r\n\tfinder = Rebay::Finding.new\r\n\tresponse = finder.get_search_keywords_recommendation({:keywords => 'acordian'})\r\n\t\r\nEbay will return an array filled result something like this:\r\n\t\t\r\n\t{\"getSearchKeywordsRecommendationResponse\": [{\"ack\": [\"Success\"],\"version\": [\"1.5.0\"],\"timestamp\": [\"2010-08-13T21:11:02.539Z\"],\"keywords\": [\"accordion\"]}]}\r\n\t\r\nFor my own sanity, I transform this response into a more standard ruby hash and in the case of the finding api responses, I removed the XXXResponse key and use the resulting hash as the response (to be inline with the shopping api responses).\r\n\r\n\t{\"ack\" => \"Success\", \"version\" => \"1.5.0\", \"timestamp\" => \"2010-08-13T21:11:02.539Z\", \"keywords\" => \"accordion\"}\r\n\r\nYou can check for success or failure of the request:\r\n\tresponse.success?\r\n\tresponse.failure?\r\n\t\r\nMIT License\r\n-----------\r\nCopyright (c) 2010 Chuck Collins\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","tagline":"Ruby client for the RESTful JSON ebay finding and shopping api"}